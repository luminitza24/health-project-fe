{"version":3,"file":"static/js/815.fb26101b.chunk.js","mappings":"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","sources":["components/Background/Background.js","components/common/ValidateEmail.js","pages/Register/RegisterForm.js","pages/Register/Register.js"],"sourcesContent":["import layer from './images/layer.png';\nimport banana from './images/banana.png';\nimport strawberry from './images/strawberry.png';\n\nexport const Background = () => {\n  return (\n    <div className=\"background\">\n      <div className=\"row\">\n        <div className=\"layer-container d-flex align-items-end\">\n          <img src={layer} alt=\"Layer\" className=\"img-fluid layer-image\" />\n        </div>\n        <div className=\"d-flex flex-column align-items-end position-relative overflow-hidden\">\n          <img\n            src={strawberry}\n            alt=\"Strawberry\"\n            className=\"img-fluid strawberry order-xl-2 order-lg-1\"\n          />\n          <img\n            src={banana}\n            alt=\"Banana\"\n            className=\"img-fluid banana order-xl-1 order-lg-2\"\n          />\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 603 816\"\n            fill=\"none\"\n            className=\"heart\"\n          >\n            <path\n              d=\"M206 259C51.6 271.8 6 403.667 1.5 468C-8.1 648.4 119.167 775.167 185 816H603V-0.000244141C603 -0.000244141 574.5 24.4998 570 68.9997C533 262 534.5 291 467.5 300.5C400.5 310 316 249.881 206 259Z\"\n              fill=\"#F0F1F3\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const validateName = name => {\n  return name.length >= 3 ? '' : 'Name must be at least 3 characters long.';\n};\n\nexport const validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email) ? '' : 'Please enter a valid email address.';\n};\n\nexport const validatePassword = password => {\n  return password.length >= 6\n    ? ''\n    : 'Password must be at least 6 characters long.';\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { register } from 'redux/auth/operations';\nimport {\n  validateName,\n  validateEmail,\n  validatePassword,\n} from '../../components/common/ValidateEmail';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    setNameError(validateName(form.elements.name.value));\n    setEmailError(validateEmail(form.elements.email.value));\n    setPasswordError(validatePassword(form.elements.password.value));\n\n    if (!nameError && !emailError && !passwordError) {\n      dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n      form.reset();\n    }\n  };\n\n  return (\n    <div className=\"container m-1\">\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"col-12\">\n          <h4 className=\"text-left m-3 pb-4 login-text\">Register</h4>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group m-2\">\n              <input\n                type=\"name\"\n                className={`form-control-custom w-2 mb-4 ${\n                  nameError ? 'is-invalid' : ''\n                } `}\n                id=\"name\"\n                placeholder=\"Name *\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n                onBlur={() => setNameError(validateName(name))}\n              />\n              <div className=\"invalid-feedback\">{nameError}</div>\n            </div>\n            <div className=\"form-group m-2\">\n              <input\n                type=\"email\"\n                className={`form-control-custom w-2 mb-4 ${\n                  emailError ? 'is-invalid' : ''\n                }`}\n                id=\"email\"\n                placeholder=\"Email *\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                onBlur={e => setEmailError(validateEmail(e.target.value))}\n              />\n              <div className=\"invalid-feedback\">{emailError}</div>\n            </div>\n            <div className=\"form-group m-2\">\n              <input\n                type=\"password\"\n                className={`form-control-custom w-2 mb-4 ${\n                  passwordError ? 'is-invalid' : ''\n                }`}\n                id=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                onBlur={e => setPasswordError(validatePassword(e.target.value))}\n              />\n              <div className=\"invalid-feedback\">{passwordError}</div>\n            </div>\n            <button type=\"submit\" className=\"btn-modal m-3 pt-3 pb-3\">\n              Register\n            </button>\n            <button type=\"button\" className=\"btn-modal m-3 pt-3 pb-3\">\n              <RouterLink\n                component={RouterLink}\n                to=\"/login\"\n                className=\"text-decoration-none text-custom\"\n              >\n                Login\n              </RouterLink>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Background } from '../../components/Background/Background';\nimport { RegisterForm } from './RegisterForm';\n\nconst Register = () => {\n  return (\n    <div className=\"flex-xl-row flex-sm-column d-flex flex-wrap justify-content-center align-items-center home-container\">\n      <div className=\"col-md-6 col-sm-12\">\n        {' '}\n        <RegisterForm />{' '}\n      </div>\n      <div className=\"col-md-6\">\n        <Background />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["Background","_jsx","className","children","_jsxs","src","layer","alt","strawberry","banana","xmlns","viewBox","fill","d","validateName","name","length","validateEmail","email","test","validatePassword","password","RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setEmail","_useState5","_useState6","setPassword","_useState7","_useState8","nameError","setNameError","_useState9","_useState10","emailError","setEmailError","_useState11","_useState12","passwordError","setPasswordError","onSubmit","e","preventDefault","form","currentTarget","elements","value","register","reset","type","concat","id","placeholder","onChange","target","onBlur","RouterLink","component","to"],"sourceRoot":""}